# Generated by Django 5.2.6 on 2025-09-25 09:10

import cloudinary.models
import django.contrib.postgres.search
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0002_alter_document_file_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='CodeCourseTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('color', models.CharField(default='#6B7280', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'code_course_tags',
            },
        ),
        migrations.CreateModel(
            name='CodeLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('version', models.CharField(blank=True, max_length=20, null=True)),
                ('file_extension', models.CharField(max_length=10)),
                ('syntax_highlight', models.CharField(max_length=50)),
                ('docker_image', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'code_languages',
            },
        ),
        migrations.CreateModel(
            name='CodeCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('thumbnail', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='thumbnail')),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='beginner', max_length=20)),
                ('estimated_hours', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('enrollment_count', models.IntegerField(default=0)),
                ('rating_average', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('rating_count', models.IntegerField(default=0)),
                ('is_free', models.BooleanField(default=True)),
                ('requires_premium', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_courses', to=settings.AUTH_USER_MODEL)),
                ('university', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.university')),
                ('tags', models.ManyToManyField(blank=True, to='home.codecoursetag')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.codelanguage')),
            ],
            options={
                'db_table': 'code_courses',
            },
        ),
        migrations.CreateModel(
            name='CodeAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(max_length=50)),
                ('achievement_type', models.CharField(choices=[('completion', 'Completion'), ('streak', 'Streak'), ('mastery', 'Mastery'), ('helping', 'Helping'), ('challenge', 'Challenge')], max_length=20)),
                ('required_value', models.IntegerField(default=1)),
                ('points_reward', models.IntegerField(default=0)),
                ('is_rare', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.codecourse')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.codelanguage')),
            ],
            options={
                'db_table': 'code_achievements',
            },
        ),
        migrations.CreateModel(
            name='CodeLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField()),
                ('description', models.TextField(blank=True, null=True)),
                ('lesson_type', models.CharField(choices=[('theory', 'Theory'), ('coding', 'Coding Exercise'), ('project', 'Project'), ('quiz', 'Quiz')], default='coding', max_length=20)),
                ('theory_content', models.TextField(blank=True, null=True)),
                ('problem_statement', models.TextField(blank=True, null=True)),
                ('starter_code', models.TextField(blank=True, null=True)),
                ('solution_code', models.TextField(blank=True, null=True)),
                ('hints', models.JSONField(blank=True, null=True)),
                ('test_cases', models.JSONField(blank=True, null=True)),
                ('hidden_test_cases', models.JSONField(blank=True, null=True)),
                ('ai_prompt_template', models.TextField(blank=True, null=True)),
                ('ai_difficulty_level', models.IntegerField(default=1)),
                ('order_index', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('estimated_time', models.IntegerField(blank=True, null=True)),
                ('points_reward', models.IntegerField(default=10)),
                ('completion_count', models.IntegerField(default=0)),
                ('average_attempts', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='home.codecourse')),
            ],
            options={
                'db_table': 'code_lessons',
            },
        ),
        migrations.CreateModel(
            name='CodeHint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('hint_type', models.CharField(default='general', max_length=50)),
                ('order_index', models.IntegerField(default=0)),
                ('show_after_attempts', models.IntegerField(default=3)),
                ('show_after_minutes', models.IntegerField(default=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_hints', to='home.codelesson')),
            ],
            options={
                'db_table': 'code_hints',
            },
        ),
        migrations.CreateModel(
            name='CodeExecutionSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('current_code', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('total_keystrokes', models.IntegerField(default=0)),
                ('total_runs', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.codelanguage')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.codelesson')),
            ],
            options={
                'db_table': 'code_execution_sessions',
            },
        ),
        migrations.CreateModel(
            name='CodeEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('total_time_spent', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('completion_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.codecourse')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('current_lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_enrollments', to='home.codelesson')),
            ],
            options={
                'db_table': 'code_enrollments',
            },
        ),
        migrations.CreateModel(
            name='CodeDiscussion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField()),
                ('code_snippet', models.TextField(blank=True, null=True)),
                ('upvotes', models.IntegerField(default=0)),
                ('downvotes', models.IntegerField(default=0)),
                ('is_solution', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_edited', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='home.codediscussion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussions', to='home.codelesson')),
            ],
            options={
                'db_table': 'code_discussions',
            },
        ),
        migrations.CreateModel(
            name='CodeLessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('skipped', 'Skipped')], default='not_started', max_length=20)),
                ('attempts_count', models.IntegerField(default=0)),
                ('time_spent', models.IntegerField(default=0)),
                ('points_earned', models.IntegerField(default=0)),
                ('best_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_attempt_at', models.DateTimeField(auto_now=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.codeenrollment')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.codelesson')),
            ],
            options={
                'db_table': 'code_lesson_progress',
            },
        ),
        migrations.AddField(
            model_name='codeenrollment',
            name='completed_lessons',
            field=models.ManyToManyField(blank=True, related_name='completed_enrollments', through='home.CodeLessonProgress', to='home.codelesson'),
        ),
        migrations.CreateModel(
            name='CodeSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_code', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('passed', 'Passed'), ('failed', 'Failed'), ('error', 'Error'), ('timeout', 'Timeout')], default='pending', max_length=20)),
                ('execution_output', models.TextField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('execution_time', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('memory_used', models.IntegerField(blank=True, null=True)),
                ('test_results', models.JSONField(blank=True, null=True)),
                ('tests_passed', models.IntegerField(default=0)),
                ('tests_total', models.IntegerField(default=0)),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('ai_feedback', models.TextField(blank=True, null=True)),
                ('ai_suggestions', models.JSONField(blank=True, null=True)),
                ('ai_code_review', models.TextField(blank=True, null=True)),
                ('ai_response_time', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('submission_count', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.codeenrollment')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.codelanguage')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.codelesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'code_submissions',
            },
        ),
        migrations.CreateModel(
            name='CodeReviewRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewer_type', models.CharField(choices=[('ai', 'AI Review'), ('mentor', 'Mentor Review'), ('peer', 'Peer Review')], default='ai', max_length=20)),
                ('specific_questions', models.TextField(blank=True, null=True)),
                ('focus_areas', models.JSONField(blank=True, null=True)),
                ('review_content', models.TextField(blank=True, null=True)),
                ('suggestions', models.JSONField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewing', 'Reviewing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.codesubmission')),
            ],
            options={
                'db_table': 'code_review_requests',
            },
        ),
        migrations.CreateModel(
            name='UserCodeAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.codeachievement')),
                ('related_course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.codecourse')),
                ('related_submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.codesubmission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_code_achievements',
            },
        ),
        migrations.CreateModel(
            name='UserCodingProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_submissions', models.IntegerField(default=0)),
                ('successful_submissions', models.IntegerField(default=0)),
                ('total_courses_enrolled', models.IntegerField(default=0)),
                ('total_courses_completed', models.IntegerField(default=0)),
                ('total_coding_time', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('current_streak', models.IntegerField(default=0)),
                ('longest_streak', models.IntegerField(default=0)),
                ('coding_theme', models.CharField(default='vs-dark', max_length=20)),
                ('font_size', models.IntegerField(default=14)),
                ('auto_save', models.BooleanField(default=True)),
                ('skill_level', models.CharField(default='beginner', max_length=20)),
                ('learning_goals', models.JSONField(blank=True, null=True)),
                ('last_coding_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preferred_language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.codelanguage')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coding_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_coding_profiles',
            },
        ),
        migrations.CreateModel(
            name='CodeCourseRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('review', models.TextField(blank=True, null=True)),
                ('content_quality', models.IntegerField(blank=True, null=True)),
                ('difficulty_appropriate', models.IntegerField(blank=True, null=True)),
                ('instructor_helpful', models.IntegerField(blank=True, null=True)),
                ('is_recommended', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.codecourse')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'code_course_ratings',
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.CreateModel(
            name='CodeDiscussionVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.SmallIntegerField(choices=[(1, 'Upvote'), (-1, 'Downvote')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('discussion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.codediscussion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'code_discussion_votes',
                'unique_together': {('discussion', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='codecourse',
            index=models.Index(fields=['status', 'is_featured', '-created_at'], name='code_course_status_fbe240_idx'),
        ),
        migrations.AddIndex(
            model_name='codecourse',
            index=models.Index(fields=['language', 'difficulty', '-enrollment_count'], name='code_course_languag_e99b51_idx'),
        ),
        migrations.AddIndex(
            model_name='codelesson',
            index=models.Index(fields=['course', 'order_index'], name='code_lesson_course__270cc0_idx'),
        ),
        migrations.AddIndex(
            model_name='codelesson',
            index=models.Index(fields=['lesson_type', 'is_published'], name='code_lesson_lesson__813f12_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='codelesson',
            unique_together={('course', 'slug')},
        ),
        migrations.AlterUniqueTogether(
            name='codelessonprogress',
            unique_together={('enrollment', 'lesson')},
        ),
        migrations.AlterUniqueTogether(
            name='codeenrollment',
            unique_together={('user', 'course')},
        ),
        migrations.AddIndex(
            model_name='codesubmission',
            index=models.Index(fields=['user', 'lesson', '-created_at'], name='code_submis_user_id_ce9c46_idx'),
        ),
        migrations.AddIndex(
            model_name='codesubmission',
            index=models.Index(fields=['status', '-created_at'], name='code_submis_status_bd454a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usercodeachievement',
            unique_together={('user', 'achievement')},
        ),
    ]
